---

- name: assert | Test fail2ban_loglevel
  ansible.builtin.assert:
    that:
      - fail2ban_loglevel is defined
      - fail2ban_loglevel is string
      - fail2ban_loglevel in [ "CRITICAL", "ERROR", "WARNING", "NOTICE", "INFO", "DEBUG" ]
    quiet: true

- name: assert | Test fail2ban_logtarget
  ansible.builtin.assert:
    that:
      - fail2ban_logtarget is defined
      - fail2ban_logtarget is string
      - fail2ban_logtarget is not none
    quiet: true

- name: assert | Test fail2ban_ignoreself
  ansible.builtin.assert:
    that:
      - fail2ban_ignoreself is defined
      - fail2ban_ignoreself is string
      - fail2ban_ignoreself in [ "false", "true" ]
    quiet: true

- name: assert | Test fail2ban_ignoreips
  ansible.builtin.assert:
    that:
      - fail2ban_ignoreips is defined
      - fail2ban_ignoreips is iterable
    quiet: true

- name: assert | Test fail2ban_bantime
  ansible.builtin.assert:
    that:
      - fail2ban_bantime is defined
      - fail2ban_bantime is number
      - fail2ban_bantime >= -1 and fail2ban_bantime !=0
    quiet: true

- name: assert | Test fail2ban_findtime
  ansible.builtin.assert:
    that:
      - fail2ban_findtime is defined
      - fail2ban_findtime is number
      - fail2ban_findtime > 0
    quiet: true

- name: assert | Test fail2ban_maxretry
  ansible.builtin.assert:
    that:
      - fail2ban_maxretry is defined
      - fail2ban_maxretry is number
      - fail2ban_maxretry > 0
    quiet: true

- name: assert | Test fail2ban_destemail
  ansible.builtin.assert:
    that:
      - fail2ban_destemail is defined
      - fail2ban_destemail is string
      - fail2ban_destemail is not none
    quiet: true

- name: assert | Test fail2ban_sender
  ansible.builtin.assert:
    that:
      - fail2ban_sender is defined
      - fail2ban_sender is string
      - fail2ban_sender is not none
    quiet: true

- name: assert | Test fail2ban_configuration
  ansible.builtin.assert:
    that:
      - fail2ban_configuration is iterable
    quiet: true
  when:
    - fail2ban_configuration is defined

- name: assert | Test item in fail2ban_configuration
  ansible.builtin.assert:
    that:
      - item.option is defined
      - item.option is string
      - item.option is not none
      - item.value is defined
      - item.section is defined
      - item.section is string
      - item.section is not none
    quiet: true
  loop: "{{ fail2ban_configuration }}"
  loop_control:
    label: "{{ item.option }}"
  when:
    - fail2ban_configuration is defined

- name: assert | Test fail2ban_jail_configuration
  ansible.builtin.assert:
    that:
      - item.option is defined
      - item.option is string
      - item.option is not none
      - item.value is defined
      - item.section is defined
      - item.section is string
      - item.section is not none
    quiet: true
  loop: "{{ fail2ban_jail_configuration }}"
  loop_control:
    label: "{{ item.option }}"
  when:
    - fail2ban_jail_configuration is defined

- name: assert | Test fail2ban_action_configurations
  ansible.builtin.assert:
    that:
      - item.option is defined
      - item.option is string
      - item.option is not none
      - item.value is defined
      - item.section is defined
      - item.section is string
      - item.section is not none
      - item.action is defined
      - item.action is string
      - item.action is not none
    quiet: true
  loop: "{{ fail2ban_action_configurations }}"
  loop_control:
    label: "{{ item.action }} {{ item.option }}"
  when:
    - fail2ban_action_configurations is defined

- name: assert | Test item in fail2ban_filterd_path
  ansible.builtin.assert:
    that:
      - fail2ban_filterd_path is string
      - fail2ban_filterd_path is not none
    quiet: true
  when:
    - fail2ban_filterd_path is defined
